It is a javascript library which sits on top of javascript.
jQueryui is a pluginn on top of jQuery for user interface.

Hook.js
Tooltipster
Magnific popup
Unslider
typeahead are some pluginns that sits on top of jQuery and helps to make the website development easier and beautiful.


Embedding jQuery:
Go to jQuery.com and download the compressed, production jQuery and it will open a ugly looking code in the new tab.
Then save the page as in the directory where the index.html file is. Then in the script tag, just above the closing head 
tag, give the file name of that jQuery in the src as <script type="text/javascript" src="jquery-1.11.1.min.js"></script>
OR can do like <script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>


How to check if jQuery is installed?


<!doctype html>
<html>
<head>
    <title>Learning jQuery</title>

    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
   
    <script type="text/javascript" src="jquery-1.11.1.min.js"></script>
</head>

<body>


<script>
    if(typeof jQuery != "undefined"){
        alert("jQuery is installed..")
    }
    else{
    alert("jQuery is not installed")
    }
</script>
</body>
</html>

Here if I don't do the typeof command, then if jQuery is not installed then it will not find the varibable called jQuery and
it will give error and not run. If I do the typeof method then even jQuery is not there, it will not give the error and still
run the code on else condition.


Detecting a click:

<!doctype html>
<html>
<head>
    <title>Learning jQuery</title>

    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
   
    <script type="text/javascript" src="jquery-1.11.1.min.js"></script>
    <style>
    #circle{
        width: 200px;
        height: 200px;
        background-color: green;
        border-radius: 200px;
   }
   .square{
    width: 200px;
    height: 200px;
    background-color: red;
    margin-top: 10px;
   }
  </style>
</head>
<body>
<div id ="circle"></div>
<div class ="square"></div>
<div class ="square"></div>

<script>
   $("#circle").click(function(){
        alert("circle clicked");
   });
   $(".square").click(function(){

    alert("square clicked");
   });

    $("div").click(function(){

    alert("div clicked");
   });
</script>
</body>
</html>


Changing the website content:

<body>
<div id ="circle"></div>
<p>This is some text</p>
<script>
   $("#circle").click(function(){
       $("p").html("the text has been changed");
   });
</script>
</body>


To get the content or attribute of the element
<script>
   $("#circle").click(function(){
       alert($("p").html());
   });
</script>


Hover function:
$("#circle").hover(function(){
    $("p").html("Hovering..")

})

Iframe:

<body>
<iframe src="http://www.cnn.com"></iframe>
</body>
This will simply show the cnn.com in the webpage.

How to change the attribute of any element: Use the attr method.

<body>
<div id ="circle"></div>
<p>This is some text</p>
<iframe src="http://www.cnn.com"></iframe>
<script>
    $("#circle").hover(function(){
         $("iframe").attr("src", "http://arsenal.com");
   })
</script>
</body>



Changing Styles:
Use css method to get or set the attributes of the element.

<script>
    $("div").click(function(){
        $(this).css("width");
   })
   This will just give the width when we alert

<script>
    $("div").click(function(){
        $(this).css("width","400px");
   })

This will change the width to 400px.


How to hide certain hide:
<script>
    $("div").click(function(){
        $(this).css("display","none");
   })
</script>

OR 
<script>
    $("div").click(function(){
        $(this).hide();
   })
</script>


How to give the fade effect:

<script>
    $("div").click(function(){
        $(this).fadeOut();
   })
</script>


Fading Content:
<script>
    $("#buttonFade").click(function(){
        $("p").fadeOut(2000);  // the number is optional 
   })
    $("#fadein").click(function(){
        $("p").fadeIn();
    })
</script>

Instead of number we can also give as fadeOut("fast") or fadeIn("slow")

Call back functions:

 $("#buttonFade").click(function(){
        $("p").fadeOut("slow",function(){
            alert("fade out complete")            
        });
 })

 After the fade out is complete, the function() will be executed, in this case a alert is in the function. This is 
 called back function.

 Animating Content:
 <script>
    $("#circle").click(function(){
        $(this).animate({
            width:"300px",
            height:"300px",
            borderRadius:"150px",
            marginLeft:"100px",
            marginTop:"100px"
        },1500)
   })
   
</script>


AJAX (Asynchronous JavaScript and XML):
Asynchronous: which can run in the background and we can run other bits of javascript codes at the same time
It allows us to load some other file from the webserver while the user is doing something without refreshing the page.


<script>
$.get("test.html",function(data){
	alert(data);
})
</script>

Here data will contain the content of the test.html file to the varible called data. We can then manipulate the data variable.
OR

<script>
$.ajax({
	url:"test.html"
}).done(function(data){
	alert(data);
})
</script>

<script>
$.ajax({
	url:"test.html"
}).done(function(data){
	$("h1").html(data);
})
</script>
This will change the header h1 to the data got from the ajax data i.e, test.html

<script>
$.ajax({
	url:"test.html"
}).done(function(data){
	$("h1").append(data);
})
</script>

The benefit of using the ajax is that we can alert the user if the internet goes down. ajax function is preferred to the get function.



Regular Expressions:
It is pattern of characters which you can then use to see if a particular string of a particular format. We can use this to see
if a string contains certain word or a  certain word is in particular format say, email format.

<script>
    var regex = /great/;
    var string ="Regex is great !";
    var result=string.match(regex);
    alert(result);
</script>

If true it will return great else return null. This match function is case sensitive and will not recognize the different case
letters. To make it case insensitive, we need to put the i flag as:
   			 var regex = /great/i;




  <script>
    var regex = /e/g;
    var string ="Regex is great !";
    var result=string.match(regex);
    alert(result);
</script>
Here g means global and it will look for every instance of e. This will return kinds array of e,e,e



Form validation:

We can use the label tag in the forms which has a for element that helps define which input that element is for.
Label is attached to the particular input element.

<!doctype html>
<html>
<head>
    <title>Form Validation</title>

    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
   
    <script type="text/javascript" src="jquery-1.11.1.min.js"></script>
    <style>
#wrapper{
    width: 600px;
    height: 50px;
    margin: 0 auto;
    font-family: helvetica;
    font-size: 1.2em;
  }

   input{
    width: 300px;
    height: 28px;
    padding: 7px;
    border-radius: 5px;
    font-size: 1.2em;
    border: 1px solid blue;
    margin-bottom: 10px;
   }
   label{
    width: 200px;
    float: left;
    padding-top: 10px;
   }
   #submitButton{
    height: 45px;
    width: 100px;
    margin-left: 200px;
   }
   #error{
    color: red;
    width: 600px;
    height: 50px;
    margin-bottom: 30px;
    
   }
 
  </style>
</head>

<body>
    <div id="error"></div>
<div id= "wrapper">

<form id="validationForm">

    <label for="email">Email</label>
    <input name="email" id="email"/> <!--This name label will hold the values of the entered data-->

    <label for="telephone">Telephone</label>
    <input name="phone" id="phone"/>

    <label for="pass">Password</label>
    <input name="pass" type="password" id ="pass"/>

    <label for="confirm ">Confirm Password</label>
    <input name="pass" type ="password" id="con"/>

    <input id="submitButton" type="submit" value= "Submit"/>

</form>
</div>

<script>
    $("#validationForm").submit(function(event){
        var errorMessage = "";
        <!--This preventDefault will stop the form being submitted-->
        event.preventDefault();
       
        function isValidEmailAddress(emailAddress) {
            var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
            return pattern.test(emailAddress);
        };

        if(!isValidEmailAddress($("#email").val())){
            errorMessage="<br/>Please enter a valid email address";
        }

        if(!$.isNumeric($("#phone").val())){
            errorMessage+="<br/>Please enter a valid telephone number";
        }

        if($("#pass").val()!=$("#con").val()){
            errorMessage+="<br/>Passwords do not match";
        }
        if(errorMessage==""){
            alert("success");
        }
        else{
        $("#error").html(errorMessage);
        }
    });
 </script>
</body>
</html>

Although there are pluginns available for password validation, it is good to know how to make one on your own.